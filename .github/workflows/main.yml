name: Build and Deploy to ACI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Container version'
        required: true
        default: 'latest'
      region:
        description: 'Azure region (e.g., westeurope, eastus)'
        required: false
        default: 'westeurope'


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: python-app-github
      RESOURCE_GROUP: Container
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      run: |
        az acr login --name ${{ secrets.ACR_NAME }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/$IMAGE_NAME:${{ github.event.inputs.version }} .

    - name: Push Docker image to ACR
      run: |
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/$IMAGE_NAME:${{ github.event.inputs.version }}
    - name: Set DNS label
      run: |
        echo "DNS_LABEL=${IMAGE_NAME}-${{ github.event.inputs.region }}-${{ github.run_id }}" >> $GITHUB_ENV

    - name: Deploy to ACI
      uses: Azure/aci-deploy@v1
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        dns-name-label: ${{ env.DNS_LABEL }}
        image: ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}
        name: ${{ env.IMAGE_NAME }}-container
        location: ${{ github.event.inputs.region }}
        cpu: 1
        memory: 1
        registry-login-server: ${{ secrets.ACR_NAME }}.azurecr.io
        registry-username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        registry-password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
